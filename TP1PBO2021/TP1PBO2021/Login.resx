<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uBywdexxS/3c+ce4Bywdez//2Q==
</value>
  </data>
</root>